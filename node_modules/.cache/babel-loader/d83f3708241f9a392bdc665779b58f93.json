{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar Type = require('../Type');\n\nvar BigIntLeftShift = require('./leftShift'); // https://262.ecma-international.org/11.0/#sec-numeric-types-bigint-signedRightShift\n\n\nmodule.exports = function BigIntSignedRightShift(x, y) {\n  if (Type(x) !== 'BigInt' || Type(y) !== 'BigInt') {\n    throw new $TypeError('Assertion failed: `x` and `y` arguments must be BigInts');\n  }\n\n  return BigIntLeftShift(x, -y);\n};","map":{"version":3,"sources":["C:/Users/DELL/Downloads/hook2-main/node_modules/es-abstract/2020/BigInt/signedRightShift.js"],"names":["GetIntrinsic","require","$TypeError","Type","BigIntLeftShift","module","exports","BigIntSignedRightShift","x","y"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,IAAI,GAAGF,OAAO,CAAC,SAAD,CAAlB;;AACA,IAAIG,eAAe,GAAGH,OAAO,CAAC,aAAD,CAA7B,C,CAEA;;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmCC,CAAnC,EAAsC;AACtD,MAAIN,IAAI,CAACK,CAAD,CAAJ,KAAY,QAAZ,IAAwBL,IAAI,CAACM,CAAD,CAAJ,KAAY,QAAxC,EAAkD;AACjD,UAAM,IAAIP,UAAJ,CAAe,yDAAf,CAAN;AACA;;AAED,SAAOE,eAAe,CAACI,CAAD,EAAI,CAACC,CAAL,CAAtB;AACA,CAND","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar Type = require('../Type');\nvar BigIntLeftShift = require('./leftShift');\n\n// https://262.ecma-international.org/11.0/#sec-numeric-types-bigint-signedRightShift\n\nmodule.exports = function BigIntSignedRightShift(x, y) {\n\tif (Type(x) !== 'BigInt' || Type(y) !== 'BigInt') {\n\t\tthrow new $TypeError('Assertion failed: `x` and `y` arguments must be BigInts');\n\t}\n\n\treturn BigIntLeftShift(x, -y);\n};\n"]},"metadata":{},"sourceType":"script"}