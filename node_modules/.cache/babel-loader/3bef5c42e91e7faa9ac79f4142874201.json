{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar isNaN = require('../../helpers/isNaN');\n\nvar Type = require('../Type'); // https://262.ecma-international.org/11.0/#sec-numeric-types-number-sameValueZero\n\n\nmodule.exports = function NumberSameValueZero(x, y) {\n  if (Type(x) !== 'Number' || Type(y) !== 'Number') {\n    throw new $TypeError('Assertion failed: `x` and `y` arguments must be Numbers');\n  }\n\n  var xNaN = isNaN(x);\n  var yNaN = isNaN(y);\n\n  if (xNaN || yNaN) {\n    return xNaN === yNaN;\n  }\n\n  return x === y;\n};","map":{"version":3,"sources":["C:/Users/DELL/Downloads/hook2-main/node_modules/es-abstract/2020/Number/sameValueZero.js"],"names":["GetIntrinsic","require","$TypeError","isNaN","Type","module","exports","NumberSameValueZero","x","y","xNaN","yNaN"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,KAAK,GAAGF,OAAO,CAAC,qBAAD,CAAnB;;AAEA,IAAIG,IAAI,GAAGH,OAAO,CAAC,SAAD,CAAlB,C,CAEA;;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgCC,CAAhC,EAAmC;AACnD,MAAIL,IAAI,CAACI,CAAD,CAAJ,KAAY,QAAZ,IAAwBJ,IAAI,CAACK,CAAD,CAAJ,KAAY,QAAxC,EAAkD;AACjD,UAAM,IAAIP,UAAJ,CAAe,yDAAf,CAAN;AACA;;AAED,MAAIQ,IAAI,GAAGP,KAAK,CAACK,CAAD,CAAhB;AACA,MAAIG,IAAI,GAAGR,KAAK,CAACM,CAAD,CAAhB;;AACA,MAAIC,IAAI,IAAIC,IAAZ,EAAkB;AACjB,WAAOD,IAAI,KAAKC,IAAhB;AACA;;AACD,SAAOH,CAAC,KAAKC,CAAb;AACA,CAXD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar isNaN = require('../../helpers/isNaN');\n\nvar Type = require('../Type');\n\n// https://262.ecma-international.org/11.0/#sec-numeric-types-number-sameValueZero\n\nmodule.exports = function NumberSameValueZero(x, y) {\n\tif (Type(x) !== 'Number' || Type(y) !== 'Number') {\n\t\tthrow new $TypeError('Assertion failed: `x` and `y` arguments must be Numbers');\n\t}\n\n\tvar xNaN = isNaN(x);\n\tvar yNaN = isNaN(y);\n\tif (xNaN || yNaN) {\n\t\treturn xNaN === yNaN;\n\t}\n\treturn x === y;\n};\n"]},"metadata":{},"sourceType":"script"}