{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $BigInt = GetIntrinsic('%BigInt%', true);\nvar $RangeError = GetIntrinsic('%RangeError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar IsInteger = require('./IsInteger');\n\nvar Type = require('./Type'); // https://262.ecma-international.org/11.0/#sec-numbertobigint\n\n\nmodule.exports = function NumberToBigInt(number) {\n  if (Type(number) !== 'Number') {\n    throw new $TypeError('Assertion failed: `number` must be a String');\n  }\n\n  if (!IsInteger(number)) {\n    throw new $RangeError('The number ' + number + ' cannot be converted to a BigInt because it is not an integer');\n  }\n\n  return $BigInt(number);\n};","map":{"version":3,"sources":["C:/Users/DELL/Downloads/hook2-main/node_modules/es-abstract/2020/NumberToBigInt.js"],"names":["GetIntrinsic","require","$BigInt","$RangeError","$TypeError","IsInteger","Type","module","exports","NumberToBigInt","number"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,OAAO,GAAGF,YAAY,CAAC,UAAD,EAAa,IAAb,CAA1B;AACA,IAAIG,WAAW,GAAGH,YAAY,CAAC,cAAD,CAA9B;AACA,IAAII,UAAU,GAAGJ,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIK,SAAS,GAAGJ,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIK,IAAI,GAAGL,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAM,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,MAAxB,EAAgC;AAChD,MAAIJ,IAAI,CAACI,MAAD,CAAJ,KAAiB,QAArB,EAA+B;AAC9B,UAAM,IAAIN,UAAJ,CAAe,6CAAf,CAAN;AACA;;AACD,MAAI,CAACC,SAAS,CAACK,MAAD,CAAd,EAAwB;AACvB,UAAM,IAAIP,WAAJ,CAAgB,gBAAgBO,MAAhB,GAAyB,+DAAzC,CAAN;AACA;;AACD,SAAOR,OAAO,CAACQ,MAAD,CAAd;AACA,CARD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $BigInt = GetIntrinsic('%BigInt%', true);\nvar $RangeError = GetIntrinsic('%RangeError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar IsInteger = require('./IsInteger');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/11.0/#sec-numbertobigint\n\nmodule.exports = function NumberToBigInt(number) {\n\tif (Type(number) !== 'Number') {\n\t\tthrow new $TypeError('Assertion failed: `number` must be a String');\n\t}\n\tif (!IsInteger(number)) {\n\t\tthrow new $RangeError('The number ' + number + ' cannot be converted to a BigInt because it is not an integer');\n\t}\n\treturn $BigInt(number);\n};\n"]},"metadata":{},"sourceType":"script"}