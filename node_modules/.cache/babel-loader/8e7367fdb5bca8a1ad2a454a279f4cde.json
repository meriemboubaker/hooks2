{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar Type = require('./Type');\n\nvar IsDataDescriptor = require('./IsDataDescriptor');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\n\nvar assertRecord = require('../helpers/assertRecord'); // https://262.ecma-international.org/5.1/#sec-8.10.4\n\n\nmodule.exports = function FromPropertyDescriptor(Desc) {\n  if (typeof Desc === 'undefined') {\n    return Desc;\n  }\n\n  assertRecord(Type, 'Property Descriptor', 'Desc', Desc);\n\n  if (IsDataDescriptor(Desc)) {\n    return {\n      value: Desc['[[Value]]'],\n      writable: !!Desc['[[Writable]]'],\n      enumerable: !!Desc['[[Enumerable]]'],\n      configurable: !!Desc['[[Configurable]]']\n    };\n  } else if (IsAccessorDescriptor(Desc)) {\n    return {\n      get: Desc['[[Get]]'],\n      set: Desc['[[Set]]'],\n      enumerable: !!Desc['[[Enumerable]]'],\n      configurable: !!Desc['[[Configurable]]']\n    };\n  } else {\n    throw new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n  }\n};","map":{"version":3,"sources":["C:/Users/DELL/Downloads/hook2-main/node_modules/es-abstract/5/FromPropertyDescriptor.js"],"names":["GetIntrinsic","require","$TypeError","Type","IsDataDescriptor","IsAccessorDescriptor","assertRecord","module","exports","FromPropertyDescriptor","Desc","value","writable","enumerable","configurable","get","set"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,IAAI,GAAGF,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIG,gBAAgB,GAAGH,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAII,oBAAoB,GAAGJ,OAAO,CAAC,wBAAD,CAAlC;;AAEA,IAAIK,YAAY,GAAGL,OAAO,CAAC,yBAAD,CAA1B,C,CAEA;;;AAEAM,MAAM,CAACC,OAAP,GAAiB,SAASC,sBAAT,CAAgCC,IAAhC,EAAsC;AACtD,MAAI,OAAOA,IAAP,KAAgB,WAApB,EAAiC;AAChC,WAAOA,IAAP;AACA;;AAEDJ,EAAAA,YAAY,CAACH,IAAD,EAAO,qBAAP,EAA8B,MAA9B,EAAsCO,IAAtC,CAAZ;;AAEA,MAAIN,gBAAgB,CAACM,IAAD,CAApB,EAA4B;AAC3B,WAAO;AACNC,MAAAA,KAAK,EAAED,IAAI,CAAC,WAAD,CADL;AAENE,MAAAA,QAAQ,EAAE,CAAC,CAACF,IAAI,CAAC,cAAD,CAFV;AAGNG,MAAAA,UAAU,EAAE,CAAC,CAACH,IAAI,CAAC,gBAAD,CAHZ;AAINI,MAAAA,YAAY,EAAE,CAAC,CAACJ,IAAI,CAAC,kBAAD;AAJd,KAAP;AAMA,GAPD,MAOO,IAAIL,oBAAoB,CAACK,IAAD,CAAxB,EAAgC;AACtC,WAAO;AACNK,MAAAA,GAAG,EAAEL,IAAI,CAAC,SAAD,CADH;AAENM,MAAAA,GAAG,EAAEN,IAAI,CAAC,SAAD,CAFH;AAGNG,MAAAA,UAAU,EAAE,CAAC,CAACH,IAAI,CAAC,gBAAD,CAHZ;AAINI,MAAAA,YAAY,EAAE,CAAC,CAACJ,IAAI,CAAC,kBAAD;AAJd,KAAP;AAMA,GAPM,MAOA;AACN,UAAM,IAAIR,UAAJ,CAAe,kFAAf,CAAN;AACA;AACD,CAxBD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar Type = require('./Type');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\n\nvar assertRecord = require('../helpers/assertRecord');\n\n// https://262.ecma-international.org/5.1/#sec-8.10.4\n\nmodule.exports = function FromPropertyDescriptor(Desc) {\n\tif (typeof Desc === 'undefined') {\n\t\treturn Desc;\n\t}\n\n\tassertRecord(Type, 'Property Descriptor', 'Desc', Desc);\n\n\tif (IsDataDescriptor(Desc)) {\n\t\treturn {\n\t\t\tvalue: Desc['[[Value]]'],\n\t\t\twritable: !!Desc['[[Writable]]'],\n\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t};\n\t} else if (IsAccessorDescriptor(Desc)) {\n\t\treturn {\n\t\t\tget: Desc['[[Get]]'],\n\t\t\tset: Desc['[[Set]]'],\n\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t};\n\t} else {\n\t\tthrow new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}