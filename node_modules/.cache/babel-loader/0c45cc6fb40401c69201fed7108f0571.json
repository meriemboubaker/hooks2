{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%'); // https://262.ecma-international.org/11.0/#sec-binaryand\n\nmodule.exports = function BinaryAnd(x, y) {\n  if (x !== 0 && x !== 1 || y !== 0 && y !== 1) {\n    throw new $TypeError('Assertion failed: `x` and `y` must be either 0 or 1');\n  }\n\n  return x & y;\n};","map":{"version":3,"sources":["C:/Users/DELL/Downloads/hook2-main/node_modules/es-abstract/2020/BinaryAnd.js"],"names":["GetIntrinsic","require","$TypeError","module","exports","BinaryAnd","x","y"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B,C,CAEA;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;AACzC,MAAKD,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAK,CAAlB,IAAyBC,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAK,CAA9C,EAAkD;AACjD,UAAM,IAAIL,UAAJ,CAAe,qDAAf,CAAN;AACA;;AACD,SAAOI,CAAC,GAAGC,CAAX;AACA,CALD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\n// https://262.ecma-international.org/11.0/#sec-binaryand\n\nmodule.exports = function BinaryAnd(x, y) {\n\tif ((x !== 0 && x !== 1) || (y !== 0 && y !== 1)) {\n\t\tthrow new $TypeError('Assertion failed: `x` and `y` must be either 0 or 1');\n\t}\n\treturn x & y;\n};\n"]},"metadata":{},"sourceType":"script"}