{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBound = require('call-bind/callBound');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $bigIntValueOf = callBound('BigInt.prototype.valueOf', true);\n\nvar Type = require('./Type'); // https://262.ecma-international.org/11.0/#sec-thisbigintvalue\n\n\nmodule.exports = function thisBigIntValue(value) {\n  var type = Type(value);\n\n  if (type === 'BigInt') {\n    return value;\n  }\n\n  if (!$bigIntValueOf) {\n    throw new $TypeError('BigInt is not supported');\n  }\n\n  return $bigIntValueOf(value);\n};","map":{"version":3,"sources":["C:/Users/DELL/Downloads/hook2-main/node_modules/es-abstract/2020/thisBigIntValue.js"],"names":["GetIntrinsic","require","callBound","$TypeError","$bigIntValueOf","Type","module","exports","thisBigIntValue","value","type"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AAEA,IAAIE,UAAU,GAAGH,YAAY,CAAC,aAAD,CAA7B;AACA,IAAII,cAAc,GAAGF,SAAS,CAAC,0BAAD,EAA6B,IAA7B,CAA9B;;AAEA,IAAIG,IAAI,GAAGJ,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAK,MAAM,CAACC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAChD,MAAIC,IAAI,GAAGL,IAAI,CAACI,KAAD,CAAf;;AACA,MAAIC,IAAI,KAAK,QAAb,EAAuB;AACtB,WAAOD,KAAP;AACA;;AACD,MAAI,CAACL,cAAL,EAAqB;AACpB,UAAM,IAAID,UAAJ,CAAe,yBAAf,CAAN;AACA;;AACD,SAAOC,cAAc,CAACK,KAAD,CAArB;AACA,CATD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $bigIntValueOf = callBound('BigInt.prototype.valueOf', true);\n\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/11.0/#sec-thisbigintvalue\n\nmodule.exports = function thisBigIntValue(value) {\n\tvar type = Type(value);\n\tif (type === 'BigInt') {\n\t\treturn value;\n\t}\n\tif (!$bigIntValueOf) {\n\t\tthrow new $TypeError('BigInt is not supported');\n\t}\n\treturn $bigIntValueOf(value);\n};\n"]},"metadata":{},"sourceType":"script"}