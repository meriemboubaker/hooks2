{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $String = GetIntrinsic('%String%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar Type = require('../Type'); // https://262.ecma-international.org/11.0/#sec-numeric-types-bigint-tostring\n\n\nmodule.exports = function BigIntToString(x) {\n  if (Type(x) !== 'BigInt') {\n    throw new $TypeError('Assertion failed: `x` must be a BigInt');\n  }\n\n  return $String(x);\n};","map":{"version":3,"sources":["C:/Users/DELL/Downloads/hook2-main/node_modules/es-abstract/2020/BigInt/toString.js"],"names":["GetIntrinsic","require","$String","$TypeError","Type","module","exports","BigIntToString","x"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,OAAO,GAAGF,YAAY,CAAC,UAAD,CAA1B;AACA,IAAIG,UAAU,GAAGH,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAII,IAAI,GAAGH,OAAO,CAAC,SAAD,CAAlB,C,CAEA;;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,CAAxB,EAA2B;AAC3C,MAAIJ,IAAI,CAACI,CAAD,CAAJ,KAAY,QAAhB,EAA0B;AACzB,UAAM,IAAIL,UAAJ,CAAe,wCAAf,CAAN;AACA;;AAED,SAAOD,OAAO,CAACM,CAAD,CAAd;AACA,CAND","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $String = GetIntrinsic('%String%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar Type = require('../Type');\n\n// https://262.ecma-international.org/11.0/#sec-numeric-types-bigint-tostring\n\nmodule.exports = function BigIntToString(x) {\n\tif (Type(x) !== 'BigInt') {\n\t\tthrow new $TypeError('Assertion failed: `x` must be a BigInt');\n\t}\n\n\treturn $String(x);\n};\n"]},"metadata":{},"sourceType":"script"}